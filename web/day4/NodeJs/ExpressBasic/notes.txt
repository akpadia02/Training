//express
-Fast, unopinionated, minimalist web framework for Node.js
-npm init --y
-npm install express --save
-npm i nodemon -g (allow too dont restart server again and again)

const express = require('express')
const app = express()
const port = 3000

app.get('/', (req, res) => {
  res.send('Hello World!')
})

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})





//middleware
//app.get app.get as many calls made
-solution is middlewares
To serve static files such as images, CSS files, and JavaScript files, use the express.static built-in middleware function in Express.
The function signature is:
express.static(root, [options])
app.use(express.static('../client'));
app.use(express.static(path.join(__dirname, '../client')));


//Thunder Client extenstion 
-just like postman

-post (body that needed to post) (header content type)
app.post('/newProduct', (req, res) => {
    const payload=req.body;
    console.log(payload);
    products.push(payload);
    res.send("Product added successfully!");
})

//express.json
-go back read value of payload and populate req.body (payload new entries)
-it is a middleware
-Returns middleware that only parses json and only looks at requests where the Content-Type header matches the type option.


//express generater
https://expressjs.com/en/starter/generator.html
Use the application generator tool, express-generator, to quickly create an application skeleton.

//router in Express
